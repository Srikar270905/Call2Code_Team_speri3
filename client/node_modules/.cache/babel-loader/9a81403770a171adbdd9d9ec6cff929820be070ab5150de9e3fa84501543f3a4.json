{"ast":null,"code":"var _jsxFileName = \"/Users/srikarperi/Desktop/Hackaton/client/src/components/VoiceAssistant.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceAssistant = ({\n  onResult\n}) => {\n  const handleSpeech = () => {\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.start();\n    recognition.onresult = event => {\n      const result = event.results[0][0].transcript;\n      onResult(result);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSpeech,\n      className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-full shadow transition\",\n      children: \"\\uD83C\\uDFA4 Speak City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = VoiceAssistant;\nexport default VoiceAssistant;\nvar _c;\n$RefreshReg$(_c, \"VoiceAssistant\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","VoiceAssistant","onResult","handleSpeech","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","start","onresult","event","result","results","transcript","onerror","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srikarperi/Desktop/Hackaton/client/src/components/VoiceAssistant.js"],"sourcesContent":["import React from \"react\";\n\nconst VoiceAssistant = ({ onResult }) => {\n  const handleSpeech = () => {\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n\n    recognition.start();\n\n    recognition.onresult = (event) => {\n      const result = event.results[0][0].transcript;\n      onResult(result);\n    };\n\n    recognition.onerror = (event) => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n  };\n\n  return (\n    <div className=\"text-center mt-4\">\n      <button\n        onClick={handleSpeech}\n        className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-full shadow transition\"\n      >\n        ðŸŽ¤ Speak City\n      </button>\n    </div>\n  );\n};\n\nexport default VoiceAssistant;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAG,KAAKC,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB,EAAE,CAAC;IACtFH,WAAW,CAACI,IAAI,GAAG,OAAO;IAC1BJ,WAAW,CAACK,cAAc,GAAG,KAAK;IAClCL,WAAW,CAACM,eAAe,GAAG,CAAC;IAE/BN,WAAW,CAACO,KAAK,CAAC,CAAC;IAEnBP,WAAW,CAACQ,QAAQ,GAAIC,KAAK,IAAK;MAChC,MAAMC,MAAM,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU;MAC7Cd,QAAQ,CAACY,MAAM,CAAC;IAClB,CAAC;IAEDV,WAAW,CAACa,OAAO,GAAIJ,KAAK,IAAK;MAC/BK,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEN,KAAK,CAACM,KAAK,CAAC;IACzD,CAAC;EACH,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BrB,OAAA;MACEsB,OAAO,EAAEnB,YAAa;MACtBiB,SAAS,EAAC,mFAAmF;MAAAC,QAAA,EAC9F;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACC,EAAA,GA7BI1B,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}